// <auto-generated />
using System;
using BitcubeEval.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BitcubeEval.Migrations
{
    [DbContext(typeof(CollegeContext))]
    [Migration("20210123221712_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("BitcubeEval.Models.Course", b =>
                {
                    b.Property<int>("CourseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CourseDuration")
                        .HasColumnType("int");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DegreeID")
                        .HasColumnType("int");

                    b.HasKey("CourseID");

                    b.HasIndex("DegreeID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("BitcubeEval.Models.Degree", b =>
                {
                    b.Property<int>("DegreeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("DegreeDuration")
                        .HasColumnType("int");

                    b.Property<string>("DegreeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LecturerID")
                        .HasColumnType("int");

                    b.HasKey("DegreeID");

                    b.HasIndex("LecturerID");

                    b.ToTable("Degree");
                });

            modelBuilder.Entity("BitcubeEval.Models.Person", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forenames")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("BitcubeEval.Models.Lecturer", b =>
                {
                    b.HasBaseType("BitcubeEval.Models.Person");

                    b.ToTable("Lecturer");
                });

            modelBuilder.Entity("BitcubeEval.Models.Student", b =>
                {
                    b.HasBaseType("BitcubeEval.Models.Person");

                    b.Property<int>("DegreeID")
                        .HasColumnType("int");

                    b.HasIndex("DegreeID");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("BitcubeEval.Models.Course", b =>
                {
                    b.HasOne("BitcubeEval.Models.Degree", "Degree")
                        .WithMany("Courses")
                        .HasForeignKey("DegreeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Degree");
                });

            modelBuilder.Entity("BitcubeEval.Models.Degree", b =>
                {
                    b.HasOne("BitcubeEval.Models.Lecturer", "Lecturer")
                        .WithMany("Degrees")
                        .HasForeignKey("LecturerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lecturer");
                });

            modelBuilder.Entity("BitcubeEval.Models.Lecturer", b =>
                {
                    b.HasOne("BitcubeEval.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("BitcubeEval.Models.Lecturer", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BitcubeEval.Models.Student", b =>
                {
                    b.HasOne("BitcubeEval.Models.Degree", "Degree")
                        .WithMany()
                        .HasForeignKey("DegreeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BitcubeEval.Models.Person", null)
                        .WithOne()
                        .HasForeignKey("BitcubeEval.Models.Student", "ID")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Degree");
                });

            modelBuilder.Entity("BitcubeEval.Models.Degree", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("BitcubeEval.Models.Lecturer", b =>
                {
                    b.Navigation("Degrees");
                });
#pragma warning restore 612, 618
        }
    }
}
